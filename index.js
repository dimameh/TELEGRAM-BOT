//==============================================================
//
// –ù–ê–°–¢–†–û–ô–ö–ò
//
//==============================================================

const 
{ 
  TOKEN,    // –í —Ñ–∞–π–ª–µ config.json –í—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

  API_KEY,  // –í —Ñ–∞–π–ª–µ config.json –í—Å—Ç–∞–≤–∏—Ç—å apiKey –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–∫–∫–∞—É–Ω—Ç–∞ airtable 

  BASE_ID,  // –í —Ñ–∞–π–ª–µ config.json –í—Å—Ç–∞–≤–∏—Ç—å base id –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ù–∞–π—Ç–∏ –≤–æ—Ç —Ç–∞–∫: –ó–∞—Ö–æ–¥–∏—Ç–µ –≤ –±–¥, –≥–¥–µ –º–æ–∂–Ω–æ –≤–∫–ª–∞–¥–∫–∏ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å. 
            //–°–ø—Ä–∞–≤–∞ –≤–≤–µ—Ä—Ö—É –≤–æ–ø—Ä–æ—Å–∏–∫ —Ç—ã–∫. Api Documentation. "The ID of this base is *********** " 

  ADMIN_ID, // –í —Ñ–∞–π–ª–µ config.json id telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ë–ï–ó –ö–ê–í–´–ß–ï–ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ (–¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å—Ç–∞—Ä—Ç–µ —Ä–∞–±–æ—Ç—ã –∏ —Ç–¥.)

/*
  –í –±–∞–∑–µ, –∞–π–¥–∏ –∫–æ—Ç–æ—Ä–æ–π –º—ã –∑–∞–ø–∏—Å–∞–ª–∏ –≤ –ø–æ–ª–µ BASE_ID, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã 
  - Questions
  - User data

  –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö –Ω–µ—Ç, —Å–æ–∑–¥–∞–π—Ç–µ! –í–æ—Ç —Å—Ö–µ–º—ã: 
  (type: –¢–ò–ü) - –í–´–ë–ò–†–ê–ï–ú –¢–ò–ü –î–ê–ù–ù–´–• –î–õ–Ø –°–¢–û–õ–ë–¶–ê 
  Questions:
    -- id (type: autonumber)
    -- username (type: single line text)
    -- question (type: longtext)
  User data: 
    -- id (type: autonumber)
    -- username (type: single line text)
    -- data (type: longtext)
*/

} = require('./config.json')


//==============================================================
//==============================================================
//==============================================================
//==============================================================
//==============================================================
const TelegramBot = require('node-telegram-bot-api')

const ChatStates = { 
  Greetings: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',
  DownloadProgram: '–°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞',
  Question: '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å',
  Enroll: '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å',
  GetChecklist: '–ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —á–µ–∫–ª–∏—Å—Ç',
}

const AirtableDataTypes = {
  Question: 'question',
  Data: 'data',
}

// Airtable
var Airtable = require('airtable')
var base = new Airtable({apiKey: API_KEY}).base(BASE_ID)

// Create a bot that uses 'polling' to fetch new updates
const bot = new TelegramBot(TOKEN, {
  polling: true
})
//–õ—é–¥–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞ –º–æ–º–µ–Ω—Ç–µ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –≤ —á–∞—Ç
let EnrollingNow = []
let QuestioningNow = []

function cleanUserStage(username) {
  EnrollingNow = EnrollingNow.filter(el => el !== username)
  QuestioningNow = QuestioningNow.filter(el => el !== username)
}

const MessageReplys = new Map()

MessageReplys.set(ChatStates.Greetings, {        
text: `
üôãüèª‚Äç‚ôÇÔ∏è–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ %Name%!

–Ø –≤–∞—à –ª–∏—á–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫. –ì–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –≤–æ–∑–Ω–∏–∫—à–∏–µ –ø–æ –∫—É—Ä—Å—É ¬´TikTok –¥–ª—è –±–∏–∑–Ω–µ—Å–∞¬ª.

üòè–ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ —è –ø–æ–¥–µ–ª—é—Å—å —Å –≤–∞–º–∏ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø—Ä–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ TikTok, –∫–æ—Ç–æ—Ä—É—é –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –∫—É—Ä—Å–∞, –≤ –æ–±—â–µ–º, —Å–æ –º–Ω–æ–π –±—É–¥–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω–æ, –Ω–æ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!

üìÑ–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –≤–Ω–∏–∑—É, —á—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞ –∏ —É–∑–Ω–∞—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üëáüèΩ
`,
  buttons: [
    [{ text: ChatStates.DownloadProgram, }],
    [{ text: ChatStates.Question }],
    [{ text: ChatStates.Enroll, }],
  ]
})

MessageReplys.set(ChatStates.DownloadProgram, {        
text: `
üî•–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫—É—Ä—Å–∞ ¬´TikTok –¥–ª—è –±–∏–∑–Ω–µ—Å–∞¬ª:

1Ô∏è‚É£–õ—É—á—à–∏–µ —ç–∫—Å–ø–µ—Ä—Ç—ã 
–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –∫—É—Ä—Å–∞ –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–µ —ç–∫—Å–ø–µ—Ä—Ç—ã, –±–ª–æ–≥–µ—Ä—ã, –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–∏ –∏ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–µ–¥—É—Ç TikTok –∏ –∑–Ω–∞—é –≤—Å–µ —Ñ–∏—à–∫–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é –æ–¥–Ω–æ–≥–æ —Ç–æ–ª—å–∫–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∞ —Ç–∞–∫–∂–µ –¥–µ–ª–∞—é—Ç –≤–∏–¥–µ–æ —Å –º–∏–ª–ª–∏–æ–Ω–Ω—ã–º–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º–∏ –∏ –ø—Ä–æ–¥—é—Å–∏—Ä—É—é—Ç –∞–∫–∫–∞—É–Ω—Ç—ã –≤ TikTok.üòè


2Ô∏è‚É£–ë–ª–æ–≥–µ—Ä—ã –º–∏–ª–ª–∏–æ–Ω–Ω–∏–∫–∏
–ù–∞ –∫—É—Ä—Å–µ –≤—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –±–ª–æ–≥–µ—Ä–∞–º–∏ –º–∏–ª–ª–∏–æ–Ω–Ω–∏–∫–∞–º–∏, –ø–æ—Ä–∞–±–æ—Ç–∞–µ—Ç–µ –ø–æ–¥ –∏—Ö –Ω–∞–¥–∑–æ—Ä–æ–º, –ø–æ–ª—É—á–∏—Ç–µ —Ü–µ–Ω–Ω—ã–π –æ–ø—ã—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ TikTok üå™


3Ô∏è‚É£¬´–ñ–∏–≤–æ–µ¬ª —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ
–í–æ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è –∫–∞–∂–¥—ã–π —Å–ª—É—à–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å ¬´–∂–∏–≤—É—é¬ª –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ. –ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ –±—É–¥—É—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –æ—á–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã, –≤–æ –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—à–∞—Ç–µ–ª–∏ –±—É–¥—É—Ç –ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ —Å–≤–æ–∏–º–∏ –º–µ–Ω—Ç–æ—Ä–∞–º–∏ –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –º–æ–Ω—Ç–∞–∂—É. üìΩ

ü§©–°–ø–∏–∫–µ—Ä—ã –∫—É—Ä—Å–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è –≤–∞—Å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç ¬´–ö–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–¥–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ TikTok¬ª.

üî•üî•üî• 

–í—ã–±–∏—Ä–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ß–µ–∫-–ª–∏—Å—Ç¬ª –∏ –∑–∞–±–∏—Ä–∞–π—Ç–µ —Å–∞–º—É—é —Å–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ —Ä–∞–±–æ—Ç—É –≤ TikTok üçâ
`,
  buttons: [
    [{ text: ChatStates.GetChecklist, }],
    [{ text: ChatStates.Enroll, }],
    [{ text: ChatStates.Question, }],
  ]
})

MessageReplys.set(ChatStates.Question, {        
text: `
–û—Ç–ª–∏—á–Ω–æ, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç–µ –∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è‚ùóÔ∏è

–ñ–¥—É –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç–µ üòåüëáüèΩ
`,
  buttons: [
    [{ text: ChatStates.DownloadProgram, }],
    [{ text: ChatStates.Enroll, }],
  ]
})

MessageReplys.set(ChatStates.Enroll, {        
text: `
üî•–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –Ω–∞ –∫—É—Ä—Å–µ ¬´TikTok –¥–ª—è –±–∏–∑–Ω–µ—Å–∞¬ª!

‚ò∫Ô∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç–µ —Å–≤–æ–∏ –§–ò–û, –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ –æ–±—É—á–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥ —Å–≤—è–∑–∏, –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —ç–∫—Å–ø–µ—Ä—Ç –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã üëáüèΩ
`,
  buttons: [
    [{ text: ChatStates.DownloadProgram, }],
    [{ text: ChatStates.Question, }],
  ]
})

MessageReplys.set(ChatStates.GetChecklist, {        
text: `
ü§©–°–ø–∏–∫–µ—Ä—ã –∫—É—Ä—Å–∞, –±–ª–æ–≥–µ—Ä—ã-–º–∏–ª–ª–∏–æ–Ω–Ω–∏–∫–∏, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∏ –∏ –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ß–µ–∫-–ª–∏—Å—Ç –ø–æ —Ä–∞–±–æ—Ç–µ –≤ TikTok! 

–≠—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ TikTok –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –Ω–æ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é.

–ó–∞–±–∏—Ä–∞–π—Ç–µ –æ—Ç–±–æ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ —Ä–∞–±–æ—Ç—É –≤ TikTok!

üî•üî•üî• 

–ñ–¥—ë–º –≤–∞—Å –Ω–∞ –∫—É—Ä—Å–µ ¬´TikTok –¥–ª—è –±–∏–∑–Ω–µ—Å–∞¬ª. –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å¬ª!
`,
    buttons: [
      [{ text: ChatStates.Enroll }], 
      [{ text: ChatStates.Question  }],
    ]
})

// 1 –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ { —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞, –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
// 2 –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞ { –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª—ã—Ç–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
// 3 –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å { —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
// 4 –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å { —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞ }
// 5 –ü–æ–ª—É—á–∏—Ç—å —á–µ–∫–ª–∏—Å—Ç { –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }

bot.on("polling_error", (err) => console.log(err))

bot.onText(/\/start/, function (msg, match) {
  GreetingsReply(msg)   
})

try {
  if (ADMIN_ID !== -1) {
    bot.sendMessage(ADMIN_ID, '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç')
  }
} catch (err) {
  console.log(err)
}

bot.on('message', msg => {
  let answer = msg.text
  let chat = GetChat(msg)
  let username = '@' + GetUsername(msg)
  switch (answer) {
    case 'start': // 1 –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ { —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞, –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
      GreetingsReply(msg)
      cleanUserStage(username)
      break
    case ChatStates.DownloadProgram: // 2 –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞ { –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª—ã—Ç–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
      DownloadProgramReply(msg)
      cleanUserStage(username)
      break
    case ChatStates.Question: // 3 –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å { —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
      QuestionsReply(msg)
      cleanUserStage(username)
      
      if (QuestioningNow.indexOf(username) === -1) //–ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–Ω —É–∂–µ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á–∞—Ç–µ
        QuestioningNow.push(username)
      break
    case ChatStates.Enroll: // 4 –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å { —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞ }
      EnrollReply(msg)

      cleanUserStage(username)
      
      if (EnrollingNow.indexOf(username) === -1) //–ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–Ω —É–∂–µ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á–∞—Ç–µ
        EnrollingNow.push(username)
      break
    case ChatStates.GetChecklist: // 5 –ü–æ–ª—É—á–∏—Ç—å —á–µ–∫–ª–∏—Å—Ç { –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
      GetChecklistReply(msg)
      cleanUserStage(username)
      break
    default:
      if (EnrollingNow.indexOf(username) !== -1) {
        //–ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –∫–ª–∞–¥–µ–º –≤ –ë–î
        UploadToAirtable(username, answer, AirtableDataTypes.Data)
        bot.sendMessage(chat, 'üôåüèΩ–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É, –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫—É—Ä—Å—É ¬´TikTok –¥–ª—è –±–∏–∑–Ω–µ—Å–∞¬ª!')
      }
      if (QuestioningNow.indexOf(username) !== -1) {
        //–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Ç–æ –∫–ª–∞–¥–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É –≤–æ–ø—Ä–æ—Å–æ–≤
        UploadToAirtable(username, answer, AirtableDataTypes.Question)
        bot.sendMessage(chat, '–°–ø–∞—Å–∏–±–æ, –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è üòâ')
      }
      cleanUserStage(username)
      break
  }
})


//Steps with buttons
/////////////////

// 1 –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ { —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞, –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
function GreetingsReply(msg) {
    let arr = MessageReplys.get(ChatStates.Greetings)
    let options = {
        reply_markup: JSON.stringify({
          keyboard: arr.buttons,
          resize_keyboard: true,
          one_time_keyboard: true,
        }), 
        parse_mode: 'Markdown'
    }
    let chat = GetChat(msg)
    let text = arr.text.replace('%Name%', msg.hasOwnProperty('chat') ? msg.chat.first_name : msg.from.first_name)
    bot.sendMessage(chat, text, options)
}

// 2 –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞ { –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª—ã—Ç–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
function DownloadProgramReply(msg) {
  let arr = MessageReplys.get(ChatStates.DownloadProgram)
  let options = {
      reply_markup: JSON.stringify({
        keyboard: arr.buttons,
        resize_keyboard: true,
        one_time_keyboard: true,
      }), 
      parse_mode: 'Markdown'
  }
  let chat = GetChat(msg)
  bot.sendDocument(chat, './files/–ü–†–û–ì–†–ê–ú–ú–ê –ö–£–†–°–ê.pdf')
  bot.sendMessage(chat, arr.text, options)  
}

// 3 –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å { —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
function QuestionsReply(msg) {
  let arr = MessageReplys.get(ChatStates.Question)
  let options = {
      reply_markup: JSON.stringify({
        keyboard: arr.buttons,
        resize_keyboard: true,
        one_time_keyboard: true,
      }), 
      parse_mode: 'Markdown'
  }
  let chat = GetChat(msg)
  bot.sendMessage(chat, arr.text, options)
}

// 4 –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å { —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞ }
function EnrollReply(msg) {
  let arr = MessageReplys.get(ChatStates.Enroll)
  let options = {
      reply_markup: JSON.stringify({
        keyboard: arr.buttons,
        resize_keyboard: true,
        one_time_keyboard: true,
      }), 
      parse_mode: 'Markdown'
  }
  let chat = GetChat(msg)
  bot.sendMessage(chat, arr.text, options)
}

// 5 –ü–æ–ª—É—á–∏—Ç—å —á–µ–∫–ª–∏—Å—Ç { –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å }
function GetChecklistReply(msg) {
  let arr = MessageReplys.get(ChatStates.GetChecklist)
  let options = {
      reply_markup: JSON.stringify({
        keyboard: arr.buttons,
        resize_keyboard: true,
        one_time_keyboard: true,
      }), 
      parse_mode: 'Markdown'
  }
  let chat = GetChat(msg)
  bot.sendDocument(chat, './files/–ß–µ–∫-–ª–∏—Å—Ç.pdf')
  bot.sendMessage(chat, arr.text, options)
}

/////////////////
function UploadToAirtable(username, message, type) {
  if (type === AirtableDataTypes.Question) {
    base('Questions').create([{
      fields: {
        username: username,
        question: message
      }  
    }], function(err, records) {
      if (err) {
        console.error(err)
        return
      }
    })
  }

  if (type === AirtableDataTypes.Data) {
    base('User data').create([{
      fields: {
        username: username,
        data: message
      }  
    }], function(err, records) {
      if (err) {
        console.error(err)
        return
      }
    })
  }
}

function GetChat(msg) {
  return msg.hasOwnProperty('chat') ? msg.chat.id : msg.from.id
}

function GetUsername(msg) {
  return msg.hasOwnProperty('chat') ? msg.chat.username : msg.from.username
}